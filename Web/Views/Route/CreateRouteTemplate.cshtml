@using Web.Models

@model List<CreateRouteTemplatesModel>

@{
    ViewBag.Title = "CreateRouteTemplate";
}

<h2>CreateRouteTemplate</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    for (int i = 0; i < Model.Count; i++)
    {
        <div class="form-horizontal">
            <h4>CreateRouteTemplatesModel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model[i].StationName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model[i].StationName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model[i].StationName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model[i].StationTown, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model[i].StationTown, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model[i].StationTown, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model[i].RouteStation.Order, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model[i].RouteStation.Order, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model[i].RouteStation.Order, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model[i].TimeFromFirstStation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model[i].TimeFromFirstStation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model[i].TimeFromFirstStation, "", new { @class = "text-danger" }) Format - HH:MM:SS
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model[i].TimeToNextStation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model[i].TimeToNextStation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model[i].TimeToNextStation, "", new { @class = "text-danger" }) Format - HH:MM:SS
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Distance from previous", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model[i].RouteStation.DistanceFromPreviousStation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model[i].RouteStation.DistanceFromPreviousStation, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(model => model[i].RouteId)
            @Html.HiddenFor(model => model[i].CompanyId)
            @if (ViewBag.Message != null)
            {
                <p>@ViewBag.Message</p>
            }

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
}

    <div>
        @Html.ActionLink("Back to List", "CompanyRoutes", new { companyId = Model.FirstOrDefault().CompanyId })
    </div>
